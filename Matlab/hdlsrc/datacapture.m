% datacapture is a generated class used for FPGA Data Capture. datacapture
% connects MATLAB with a FPGA and captures the FPGA internal signals via
% JTAG connection.
% 
% dco = datacapture returns a FPGA Data Capture System object generated by 
% the user. It captures internal signals from an FPGA that contains the FPGA 
% Data Capture HDL IP core, and returns the data to MATLAB over the JTAG cable. 
% 
%  Step method syntax
% [m_axis_data_tdata,xfft_0_s_axis_config_tready,xfft_0_s_axis_data_tready,xfft_0_event_data_out_channel_halt,xfft_0_event_data_in_channel_halt,xfft_0_event_status_channel_halt,xfft_0_event_tlast_missing,xfft_0_event_tlast_unexpected,xfft_0_event_frame_started,xfft_0_m_axis_data_tdata,xfft_0_m_axis_data_tuser,xfft_0_m_axis_data_tvalid,xfft_0_m_axis_data_tlast,dds_compiler_0_m_axis_data_tdata]=step(dco) connects to the FPGA, and read data from the FPGA.
% 
% datacapture methods:
% step - see above description for use of this method
% release - Allow property value and input characteristics changes, and release connection to FPGA board
% clone - Create datacapture object with same property values
% isLocked - Locked status (logical)
% setTriggerCondition - Set trigger condition for each trigger signal
% setTriggerCombinationOperator - Set trigger combination operator
% setDataType - Set signal data type
% displayDataTypes - Display current data type settings
% displayTriggerCondition - Display current trigger condition
% launchApp - Launch Graphical User Interface (GUI) App for setting data types, triggers, and capture data interactively
% 
% datacapture properties:
% TimeOut - Time to wait before throwing exception, if trigger condition is not met
% TriggerPosition - The number of samples captured before trigger event
% JTAGCableName - Name of the JTAG cable used for data capture
% JTAGChainPosition - JTAG chain position number of the target FPGA
% IRLengthBefore  - Instruction register lengths before FPGA
% IRLengthAfter   - Instruction register lengths after FPGA
% TckFrequency    - JTAG clock frequency in MHz. 
%
% Created: 12-Feb-2019 13:57:47
% Generated by MATLAB 9.3 and HDL Verifier 5.3

classdef datacapture< hdlverifier.FPGADataReader

methods
    function obj = datacapture
        obj.TriggerPosition  =  0;
        obj.TimeOut          = 10;
        obj.setDataType('m_axis_data_tdata','uint16');
        obj.setDataType('xfft_0_s_axis_config_tready','boolean');
        obj.setDataType('xfft_0_s_axis_data_tready','boolean');
        obj.setDataType('xfft_0_event_data_out_channel_halt','boolean');
        obj.setDataType('xfft_0_event_data_in_channel_halt','boolean');
        obj.setDataType('xfft_0_event_status_channel_halt','boolean');
        obj.setDataType('xfft_0_event_tlast_missing','boolean');
        obj.setDataType('xfft_0_event_tlast_unexpected','boolean');
        obj.setDataType('xfft_0_event_frame_started','boolean');
        obj.setDataType('xfft_0_m_axis_data_tdata','uint16');
        obj.setDataType('xfft_0_m_axis_data_tuser','uint16');
        obj.setDataType('xfft_0_m_axis_data_tvalid','boolean');
        obj.setDataType('xfft_0_m_axis_data_tlast','boolean');
        obj.setDataType('dds_compiler_0_m_axis_data_tdata','uint8');
    end
end

% !!! Do NOT change any of the constant properties below !!!
properties (Nontunable, Constant)
    % SamplesPerFrame Samples per frame
    SamplesPerFrame = 2048
    BitWidth = [16   1   1   1   1   1   1   1   1  16  16   1   1   8]
    SignalNames = {'m_axis_data_tdata','xfft_0_s_axis_config_tready','xfft_0_s_axis_data_tready','xfft_0_event_data_out_channel_halt','xfft_0_event_data_in_channel_halt','xfft_0_event_status_channel_halt','xfft_0_event_tlast_missing','xfft_0_event_tlast_unexpected','xfft_0_event_frame_started','xfft_0_m_axis_data_tdata','xfft_0_m_axis_data_tuser','xfft_0_m_axis_data_tvalid','xfft_0_m_axis_data_tlast','dds_compiler_0_m_axis_data_tdata'}
    IsSignalTrigger = [1  1  1  1  1  1  1  1  1  1  1  1  1  1]
    IsSignalData = [1  1  1  1  1  1  1  1  1  1  1  1  1  1]
    % FPGAVendor FPGA vendor
    FPGAVendor = 'Xilinx'
    % Version
    Version = '1.0'
    % Timestamp
    TimeStamp = '12-Feb-2019 13:57:47'
end

end
